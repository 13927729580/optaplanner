<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!--<environmentMode>FAST_ASSERT</environmentMode>-->
  <solutionClass>org.optaplanner.examples.nqueens.domain.NQueens</solutionClass>
  <planningEntityClass>org.optaplanner.examples.nqueens.domain.Queen</planningEntityClass>

  <scoreDirectorFactory>
    <scoreDefinitionType>SIMPLE</scoreDefinitionType>
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensBasicIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensAdvancedIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <scoreDrl>org/optaplanner/examples/nqueens/solver/nQueensScoreRules.drl</scoreDrl>
    <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    <!--<assertionScoreDirectorFactory>-->
      <!--<easyScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <termination>
    <bestScoreLimit>0</bestScoreLimit>
  </termination>
  <customSolverPhase>
    <customSolverPhaseCommandClass>org.optaplanner.examples.nqueens.solver.solution.CheatingNQueensPhaseCommand</customSolverPhaseCommandClass>
  </customSolverPhase>
  <!--<constructionHeuristic>-->
    <!--<constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>-->
  <!--</constructionHeuristic>-->
  <!--<localSearch>-->
    <!--<changeMoveSelector>-->
      <!--<selectionOrder>ORIGINAL</selectionOrder>-->
    <!--</changeMoveSelector>-->
    <!--&lt;!&ndash; changeMoveSelector is the generic form of RowChangeMoveFactory: &ndash;&gt;-->
    <!--&lt;!&ndash;<moveListFactory>&ndash;&gt;-->
      <!--&lt;!&ndash;<moveListFactoryClass>org.optaplanner.examples.nqueens.solver.move.factory.RowChangeMoveFactory</moveListFactoryClass>&ndash;&gt;-->
    <!--&lt;!&ndash;</moveListFactory>&ndash;&gt;-->
    <!--<acceptor>-->
      <!--<entityTabuSize>5</entityTabuSize>-->
    <!--</acceptor>-->
    <!--<forager>-->
      <!--&lt;!&ndash; Real world problems require to use of <acceptedCountLimit> &ndash;&gt;-->
    <!--</forager>-->
  <!--</localSearch>-->
  <!-- To scale out, replace <localSearch> with this configuration: -->
  <!--<localSearch>-->
    <!--<unionMoveSelector>-->
      <!--<changeMoveSelector/>-->
      <!--<swapMoveSelector/>-->
    <!--</unionMoveSelector>-->
    <!--<acceptor>-->
      <!--<entityTabuSize>11</entityTabuSize>-->
    <!--</acceptor>-->
    <!--<forager>-->
      <!--<acceptedCountLimit>2000</acceptedCountLimit>-->
      <!--<pickEarlyType>FIRST_BEST_SCORE_IMPROVING</pickEarlyType>-->
    <!--</forager>-->
  <!--</localSearch>-->
</solver>
