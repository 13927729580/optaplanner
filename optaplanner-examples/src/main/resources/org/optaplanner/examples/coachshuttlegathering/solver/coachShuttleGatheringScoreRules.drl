/*
 * Copyright 2012 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.optaplanner.examples.tsp.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import org.optaplanner.examples.coachshuttlegathering.domain.Bus;
import org.optaplanner.examples.coachshuttlegathering.domain.BusHub;
import org.optaplanner.examples.coachshuttlegathering.domain.BusStop;
import org.optaplanner.examples.coachshuttlegathering.domain.Coach;
import org.optaplanner.examples.coachshuttlegathering.domain.CoachShuttleGatheringSolution;
import org.optaplanner.examples.coachshuttlegathering.domain.Shuttle;
import org.optaplanner.examples.coachshuttlegathering.domain.location.RoadLocation;
import org.optaplanner.examples.coachshuttlegathering.domain.location.RoadLocationArc;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################

//rule "vehicleCapacity"
//    when
//        $vehicle : Vehicle($capacity : capacity)
//        $demandTotal : Number(intValue > $capacity) from accumulate(
//            Customer(
//                vehicle == $vehicle,
//                $demand : demand),
//            sum($demand)
//        )
//    then
//        scoreHolder.addHardConstraintMatch(kcontext, $capacity - $demandTotal.intValue());
//end

// ############################################################################
// Soft constraints
// ############################################################################

rule "shuttleSetupCost"
    when
        Bus(nextStop != null, $cost : setupCost)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $cost);
end

rule "distanceFromPrevious"
    when
        BusStop(previousBusOrStop != null, $cost : distanceFromPreviousCost)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $cost);
end

rule "distanceBusStopToBusDestination"
    when
        $bus : Bus(destination != null, nextStop != null, $destination : destination)
        $stop : BusStop(bus == $bus, nextStop == null)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $stop.getDistanceToDestinationCost($destination));
end

rule "distanceCoachDirectlyToDestination"
    when
        Coach(destination != null, nextStop == null, $cost : distanceToDestinationCost)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $cost);
end

//rule "distanceFromLastCustomerToDepot"
//    when
//        $customer : Customer(previousStandstill != null)
//        not Customer(previousStandstill == $customer)
//    then
//        Vehicle vehicle = $customer.getVehicle();
//        scoreHolder.addSoftConstraintMatch(kcontext, - $customer.getDistanceTo(vehicle));
//end
