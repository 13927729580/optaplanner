/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.optaplanner.examples.tennis.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardmediumsoft.HardMediumSoftScoreHolder;

import org.optaplanner.examples.tennis.domain.Team;
import org.optaplanner.examples.tennis.domain.Day;
import org.optaplanner.examples.tennis.domain.UnavailabilityPenalty;
import org.optaplanner.examples.tennis.domain.TeamAssignment;

import org.apache.commons.lang3.tuple.Pair;
import accumulate org.optaplanner.examples.tennis.solver.drools.functions.LoadBalanceByCountAccumulateFunction loadBalanceByCount;

global HardMediumSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################

rule "oneAssignmentPerDatePerTeam"
    when
        TeamAssignment(team != null, $t : team, $d : day, $leftId : id)
        TeamAssignment(team == $t, day == $d, id > $leftId)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "unavailabilityPenalty"
    when
        UnavailabilityPenalty($t : team, $d : day)
        TeamAssignment(team == $t, day == $d)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

// ############################################################################
// Medium constraints
// ############################################################################

rule "fairAssignmentCountPerTeam"
    when
        accumulate(
            TeamAssignment(team != null, $t : team);
            $total : loadBalanceByCount($t)
        )
    then
        scoreHolder.addMediumConstraintMatch(kcontext, - (int) $total.getZeroDeviationSquaredSumRootMillis());
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "evenlyConfrontationCount"
    when
        accumulate(
            TeamAssignment(team != null, $t1 : team, $d : day)
            and TeamAssignment(team != null, $t1.getId() < team.getId(), $t2 : team, day == $d);
            $total : loadBalanceByCount(Pair.of($t1, $t2))
        )
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - (int) $total.getZeroDeviationSquaredSumRootMillis());
end
