<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!--<environmentMode>DEBUG</environmentMode>-->
  <solutionClass>org.kie.planner.examples.nqueens.domain.NQueens</solutionClass>
  <planningEntityClass>org.kie.planner.examples.nqueens.domain.Queen</planningEntityClass>

  <scoreDirectorFactory>
    <scoreDefinitionType>SIMPLE</scoreDefinitionType>
    <!--<simpleScoreCalculatorClass>org.kie.planner.examples.nqueens.solver.score.NQueensSimpleScoreCalculator</simpleScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.kie.planner.examples.nqueens.solver.score.NQueensBasicIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <incrementalScoreCalculatorClass>org.kie.planner.examples.nqueens.solver.score.NQueensAdvancedIncrementalScoreCalculator</incrementalScoreCalculatorClass>
    <!--<scoreDrl>/org/drools/planner/examples/nqueens/solver/nQueensScoreRules.drl</scoreDrl>-->
    <!--<scoreDrl>/org/drools/planner/examples/nqueens/solver/nQueensCompensationActionExperimentScoreRules.drl</scoreDrl>-->
    <!--<assertionScoreDirectorFactory>-->
      <!--<scoreDrl>/org/drools/planner/examples/nqueens/solver/nQueensScoreRules.drl</scoreDrl>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <termination>
    <scoreAttained>0</scoreAttained>
  </termination>
  <constructionHeuristic>
    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>
    <constructionHeuristicPickEarlyType>FIRST_LAST_STEP_SCORE_EQUAL_OR_IMPROVING</constructionHeuristicPickEarlyType>
  </constructionHeuristic>
  <localSearch>
    <changeMoveSelector>
      <selectionOrder>ORIGINAL</selectionOrder>
    </changeMoveSelector>
    <!-- changeMoveSelector is the generic form of RowChangeMoveFactory: -->
    <!--<moveListFactory>-->
      <!--<moveListFactoryClass>org.kie.planner.examples.nqueens.solver.move.factory.RowChangeMoveFactory</moveListFactoryClass>-->
    <!--</moveListFactory>-->
    <acceptor>
      <planningEntityTabuSize>5</planningEntityTabuSize>
    </acceptor>
    <forager>
      <!-- Real world problems require to use of <minimalAcceptedSelection> -->
    </forager>
  </localSearch>
  <!-- To scale out, replace <localSearch> with this configuration: -->
  <!--<localSearch>-->
    <!--<unionMoveSelector>-->
      <!--<changeMoveSelector/>-->
      <!--<swapMoveSelector/>-->
    <!--</unionMoveSelector>-->
    <!--<acceptor>-->
      <!--<planningEntityTabuSize>11</planningEntityTabuSize>-->
    <!--</acceptor>-->
    <!--<forager>-->
      <!--<minimalAcceptedSelection>2000</minimalAcceptedSelection>-->
      <!--<pickEarlyType>FIRST_BEST_SCORE_IMPROVING</pickEarlyType>-->
    <!--</forager>-->
  <!--</localSearch>-->
</solver>
